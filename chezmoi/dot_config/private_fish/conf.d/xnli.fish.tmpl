{{ template "banner.tmpl" "Fish - Profiles" }}

# --- Global path section
# -----------------------------------------------------------------------------
fish_add_path $HOME/.local/bin

# --- Keybindings section
# -----------------------------------------------------------------------------
if command -sq fzf_configure_bindings
  fzf_configure_bindings --directory=\cf --git_log=\cg --git_status=\cs   # [Ctrl+F] Find file in directory
                                                                          # [Ctrl+G] Find file in git history
                                                                          # [Ctrl+S] Find file in git status
end

# --- Prompt configuration
# -----------------------------------------------------------------------------
# - starship prompt
if command -sq starship
  function starship_transient_prompt_func
    starship module line_break
    starship module sudo
    starship module directory
    starship module character
  end

  function starship_transient_rprompt_func
    starship module time
  end

  starship init fish --print-full-init | source
  enable_transience
end

# --- Utility configuration
# -----------------------------------------------------------------------------
# - mise
# NOTE: must be used before all, in order to manage all "standalone" tools
if command -sq mise
  mise hook-env | source
end

# - atui
if command -sq atui
  atui init fish | source
end

# - direnv
# NOTE: must be used before all, in order to manage custom environment
# NOTEÂ²: @pjeby (https://github.com/direnv/direnv/issues/583#issuecomment-626109571)
if command -sq direnv
  function __direnv_export_eval --on-event fish_prompt;
    # Run on each prompt to update the state
    direnv export fish | source;

    # Handle cd history arrows between now and the next prompt
    function __direnv_cd_hook --on-variable PWD;
      # ensure any output overwrites the prompt instead of going after it
      echo -ne '\r'
      # run the outer function to apply any changes
      __direnv_export_eval
    end

    function __direnv_disable_cd --on-event fish_preexec;
      # Once we're running commands, stop monitoring cd changes
      # until we get to the prompt again
      functions --erase __direnv_cd_hook
    end
  end
end

# - github CLI
if command -sq gh
  abbr --add --global !! gh copilot suggest -t shell
  abbr --add --global git! gh copilot suggest -t git
  abbr --add --global gh! gh copilot suggest -t gh
end

# - chezmoi
if command -sq chezmoi
  chezmoi completion fish | source
end

# --- Custom variables/paths
# -----------------------------------------------------------------------------
set --global --export EDITOR "nvim"
set --global --export VISUAL $EDITOR
set --global --export GIT_EDITOR $EDITOR
set --global --export TF_PLUGIN_CACHE_DIR "$HOME/.terraform.d/plugin-cache"

# --- Custom aliases/abbreviations
# -----------------------------------------------------------------------------
# - bitwarden secrets
if command -sq bws
  function bws!
    BWS_SERVER_URL="https://vault.bitwarden.eu" \
    BWS_ACCESS_TOKEN=(chezmoi execute-template "{{ "{{" }} .bitwarden.access_token }}") \
    bws --output table $argv
  end
  abbr --add bws bws!
end

# - k9s abbreviations
if command -sq k9s
  abbr --add --global k9s k9s --readonly
  abbr --add --global k9s! k9s
end

# - kubectl abbreviations
if command -sq kubectl

  # ---- Download kubectl completion
  set --local __kubectl_completion_path "$__fish_config_dir/completions/kubectl.fish"
  if not test -e $__kubectl_completion_path
    set --local __kubectl_completion_sha "ced676392575d618d8b80b3895cdc3159be3f628"
    set --local __kubectl_completion_url "https://raw.githubusercontent.com/evanlucas/fish-kubectl-completions/$__kubectl_completion_sha/completions/kubectl.fish"

    curl -fsSL "$__kubectl_completion_url" > "$__kubectl_completion_path"
  end

  abbr --add --global k kubectl
  abbr --add --global kn kubectl config set-context --current --namespace
  abbr --add --global kx kubectl config use-context
end

# - git abbreviations
abbr --add --global g git

abbr --add --global gl git pull
abbr --add --global gp git push
abbr --add --global gpf git push --force-with-lease
abbr --add --global grb git rebase
abbr --add --global grba git rebase --abort
abbr --add --global grbc git rebase --continue
abbr --add --global gst git status
abbr --add --global gs git switch
abbr --add --global gsc git switch --create

# - grep abbreviations
alias grep "grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}"

# - lazygit abbreviations
if command -sq lazygit
  abbr --add --global lg lazygit
end

# - ls abbreviations
alias ls "ls --color=auto"
abbr --add --global ll ls -lh
abbr --add --global la ls -lah

# - exa abbreviations
if command -sq exa
  abbr --add --global exa "exa --icons --grid"
end

# - vim abbreviation
if command -sq nvim
  abbr --add --global vim nvim
end

# ---- Custom functions
# -----------------------------------------------------------------------------
# - bitwarden extensions
if command -sq bw
  function bw_session --description "Open a new Bitwarden session"
    set --global BW_SESSION (bw unlock --raw)
  end
end

# - chezmoi extensions
if command -sq chezmoi
  function chezmoi_banner --description "Generate personal file header"
    chezmoi execute-template '{{ "{{" }} template "banner.tmpl" dict "Title" "'$argv[1]'" "Subtitle" "'$argv[2]'" }}';
  end
end

abbr --add --global banner chezmoi_banner

# --- Lazy load .fish files
# -----------------------------------------------------------------------------
# NOTE: this section is used to load dynamically fish files when we modify the
#       fish_lazy_load variable (with `path_add fish_lazy_load ".direnv/fish.d"`
#       for example)

set --universal fish_lazy_load
function __fish_lazy_load_files --description "Lazy load .fish files" --on-variable fish_lazy_load
  for dir in (string split ':' $fish_lazy_load)
    for file in (find $dir -name '*.fish' -type f)
      source $file
    end
  end
end
